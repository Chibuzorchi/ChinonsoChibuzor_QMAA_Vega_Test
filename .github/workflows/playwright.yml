name: SauceDemo Test Automation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: SauceDemo Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libasound2-dev \
          libatk1.0-0 \
          libatk-bridge2.0-0 \
          libcups2 \
          libdrm2 \
          libgbm1 \
          libnss3 \
          libpango-1.0-0 \
          libxcomposite1 \
          libxdamage1 \
          libxfixes3 \
          libxrandr2 \
          libxshmfence1 \
          xvfb \
          fonts-noto-color-emoji \
          ttf-unifont

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Playwright
      run: |
        playwright install --with-deps chromium
        
    - name: Verify Playwright Installation
      run: |
        python -c "from playwright.sync_api import sync_playwright; sync_playwright().start()"

    - name: Create test results directory
      run: |
        mkdir -p test-results
        mkdir -p screenshots

    - name: Run Tests
      run: |
        python -m pytest -v \
          --html=test-results/report.html \
          --junitxml=test-results/junit.xml
      env:
        PYTHONPATH: ${{ github.workspace }}
        HEADLESS: "true"
        BROWSER: "chromium"
        BASE_URL: "https://www.saucedemo.com/v1"
        STANDARD_USER: "standard_user"
        STANDARD_PASSWORD: "secret_sauce"
        LOCKED_OUT_USER: "locked_out_user"
        LOCKED_OUT_PASSWORD: "secret_sauce"
        PROBLEM_USER: "problem_user"
        PROBLEM_PASSWORD: "secret_sauce"
        PLAYWRIGHT_TIMEOUT: "30000"

    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: |
          test-results/
          screenshots/

    - name: Publish Test Results
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: SauceDemo Tests
        path: "test-results/junit.xml"
        reporter: java-junit
        fail-on-error: false