name: SauceDemo Test Automation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-xdist pytest-reportlog pytest-html
        playwright install --with-deps chromium

    - name: Create test results directory
      run: |
        mkdir -p test-results
        mkdir -p screenshots

    - name: Run Smoke Tests
      if: success() || failure()
      run: |
        python -m pytest -v -m "smoke" \
          --html=test-results/smoke-report.html \
          --junitxml=test-results/smoke-results.xml \
          --timeout=30000
      env:
        PYTHONPATH: ${{ github.workspace }}
        HEADLESS: "true"
        BROWSER: "chromium"
        BASE_URL: "https://www.saucedemo.com/v1"
        STANDARD_USER: "standard_user"
        STANDARD_PASSWORD: "secret_sauce"
        LOCKED_OUT_USER: "locked_out_user"
        LOCKED_OUT_PASSWORD: "secret_sauce"
        PROBLEM_USER: "problem_user"
        PROBLEM_PASSWORD: "secret_sauce"
        PLAYWRIGHT_TIMEOUT: "30000"

    - name: Run Regression Tests
      if: success() || failure()
      run: |
        python -m pytest -v -m "regression" \
          --html=test-results/regression-report.html \
          --junitxml=test-results/regression-results.xml
      env:
        PYTHONPATH: ${{ github.workspace }}
        HEADLESS: "true"
        BROWSER: "chromium"
        BASE_URL: "https://www.saucedemo.com/v1"
        STANDARD_USER: "standard_user"
        STANDARD_PASSWORD: "secret_sauce"
        LOCKED_OUT_USER: "locked_out_user"
        LOCKED_OUT_PASSWORD: "secret_sauce"

    - name: Run Security Tests
      if: success() || failure()
      run: |
        python -m pytest -v -m "negative" \
          --html=test-results/security-report.html \
          --junitxml=test-results/security-results.xml
      env:
        PYTHONPATH: ${{ github.workspace }}
        HEADLESS: "true"
        BROWSER: "chromium"
        BASE_URL: "https://www.saucedemo.com/v1"
        STANDARD_USER: "standard_user"
        STANDARD_PASSWORD: "secret_sauce"
        LOCKED_OUT_USER: "locked_out_user"
        LOCKED_OUT_PASSWORD: "secret_sauce"

    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: |
          test-results/
          screenshots/

    - name: Publish Test Results
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: SauceDemo Tests
        path: "test-results/*.xml"
        reporter: java-junit
        fail-on-error: false